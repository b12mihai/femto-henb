
target_alias = @target_alias@
target_cpu = @target_cpu@
prefix = @prefix@

KERNEL_ROOT=@kbuilddir@
TARGETDIR=$(prefix)/firmware

EMBUNIT_DIR := @embunit_dir@
EMBUNIT_SRC := embunit/embUnit

ifneq ($(KERNELRELEASE),)

ifdef V
    KBUILD_VERBOSE = $(V)
endif


EXTRA_CFLAGS += -I$(src) -I$(EMBUNIT_DIR)
EXTRA_CFLAGS += -DNO_STDIO_PRINTF

obj-m += test.o

#test runner
test-y := test_runner.o

#counter module
test-y += counter.o
test-y += counterTest.o

#person module
test-y += person.o
test-y += personTest.o

#embunit
test-y += $(EMBUNIT_SRC)/AssertImpl.o
test-y += $(EMBUNIT_SRC)/RepeatedTest.o
test-y += $(EMBUNIT_SRC)/stdImpl.o
test-y += $(EMBUNIT_SRC)/TestCaller.o
test-y += $(EMBUNIT_SRC)/TestCase.o
test-y += $(EMBUNIT_SRC)/TestResult.o
test-y += $(EMBUNIT_SRC)/TestRunner.o
test-y += $(EMBUNIT_SRC)/TestSuite.o

else

all: testing

testing:
	echo "Making $@ in `pwd`"
	@ln -sf $(EMBUNIT_DIR)
	ARCH=$(target_cpu) CROSS_COMPILE="$(target_alias)-" \
	$(MAKE) V=1 -C $(KERNEL_ROOT) M=`pwd` modules

clean:
	echo "Making $@ in `pwd`"
	ARCH=$(target_cpu) CROSS_COMPILE="$(target_alias)-" \
	$(MAKE) V=1 -C $(KERNEL_ROOT) M=`pwd` clean

install:
	echo "Making $@ in `pwd`"
	ARCH=$(target_cpu) CROSS_COMPILE="$(target_alias)-" \
	$(MAKE) V=99 -C $(KERNEL_ROOT) M=`pwd` INSTALL_MOD_PATH=$(TARGETDIR) modules_install 
endif