



* missing mlog
 - 3684764175

1. Add mlog_lnx.c mlog_lnx.h to project.
2. Open mlog (main.c):
you have two opportunities: 
   2.a allocate memory for buffers with mmap    - you will have constant address, and you will upload mlog after reset (DTR)
    MLogOpen(start_physaddr, offset);
or 2.b allocate memory for buffers with malloc  - you will have float address
    MLogOpen(0, 0);

3. initialize mlog:
    MLogDevInfo(4007);
    MLogFREQ(RESOURCE_LINUX0, 600*1000*1000); // 600 MHz     (RESOURCE_LINUX0 >=18)
    MLogSetResetCounter(200);   // 200 TTI will save

at the default, the  mlog_ctx.EnabledMask = 0 and mlog_ctx.Started = MLOG_FALSE. You need to to set 
mlog_ctx.EnabledMask = 1<<RESOURCE_LINUX0;
and mlog_ctx.Started = MLOG_TRUE;
you can use "mlogmask 1" from uarm-console

4. use MLogTask(unsigned int taskid, unsigned int resourceid, unsigned int ticksstart, unsigned int ticksstop) for logging. 
Please use taskid>40000 for correct combining mlog from larm and mlog from uarm.


For example:

#define PID_LINUX_PHY_SEND_LIST 40028

void foo(void)
{
 U32 tt = Timer0GetCntr();
...
 
 some c/asm-code
...
 MLogTask(PID_LINUX_PHY_SEND_LIST, RESOURCE_LINUX0, tt, Timer0GetCntr());
 return;
}

5. Upload mlog to file system (c:\Mlog) (Use command at uarm: "getmlog ./mlog_uarm.bin") or appropriate rdmem r $MLOGBASE $MLOGSIZE -o ./mlog_uarm.bin

6. make DOS-command "c:\Mlog\copy /b ./mlog_larm.bin+./mlog_uarm.bin" -> you will get summary mlog into mlog_larm.bin

7. Open mlog_larm.bin with TTBox.

PS.

diags.h and console.c you can look as usage example also
