
target_alias = @target_alias@
target_cpu = @target_cpu@
prefix = @prefix@

KERNEL_ROOT=@kbuilddir@
TARGETDIR=$(prefix)/firmware

ifneq ($(KERNELRELEASE),)
ifdef V
    KBUILD_VERBOSE = $(V)
endif

EXTRA_CFLAGS += -I$(src)
EXTRA_CFLAGS += -DLTE_DEBUG

%.c: %.h

obj-m += lte_sched.o

#sched_csap-y := sched_csap.o

obj-m += lte_enb.o

# lte_enb-y += lte_enb_mac.o
# lte_enb-y += lte_enb_rlc.o
lte_enb-y += tti_timer.o
CFLAGS_tti_timer.o = -O0


#timer module
obj-m += timerunit.o

else # ! KERNELRELEASE

all: modules

modules:
	echo "Making $@ in `pwd`"
	ARCH=$(target_cpu) CROSS_COMPILE="$(target_alias)-" \
	$(MAKE) V=1 -C $(KERNEL_ROOT) M=`pwd` modules

clean:
	echo "Making $@ in `pwd`"
	ARCH=$(target_cpu) CROSS_COMPILE="$(target_alias)-" \
	$(MAKE) V=0 -C $(KERNEL_ROOT) M=`pwd` clean

install:
	echo "Making $@ in `pwd`"
	ARCH=$(target_cpu) CROSS_COMPILE="$(target_alias)-" \
	$(MAKE) V=1 -C $(KERNEL_ROOT) M=`pwd` INSTALL_MOD_PATH=$(TARGETDIR) modules_install 


################################################################################
# Run QEMU testing throughout screen 
################################################################################

qemu-test: modules
	@make -C ../testing

endif